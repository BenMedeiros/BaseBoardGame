:root {
  --iconFilter: null;
  --gamepieceFilter: null;
  --player-character-scale: .7;
  --player-character-offset: calc(1 - var(--player-character-scale)) / 2;
  --player-character-x: -1;
  --player-character-y: -1;
  --is-active-player: 0;
}

#scoreboard {
  background-color: var(--color-menu-backdrop);
  color: white;
  font-family: Arial;
  padding: .5rem;
  border: 1px solid var(--color-menu-border);
  border-radius: .5rem;
  margin: 0.5rem;
  float: right;
  width: auto;
  height: auto;
  user-select: none;
  filter: drop-shadow(2px 4px 6px black);

}

.player-box {
  border: .1rem solid rgba(0, 0, 0, 0);
  padding-inline: .5rem;
  display: block;
}

.player-box.active {
  border: .1rem solid var(--color-backdrop);
  font-weight: bold;
}

.player-icon {
  max-height: 2.5rem;
  max-width: 2.5rem;
  padding-right: .7rem;
  padding-left: .3rem;
  transition: transform 1s;
  filter: var(--iconFilter);
  transform: scale(calc(1 + (.5 * var(--is-active-player)))) translateX(calc(.2rem * var(--is-active-player)));
}

.player-name {
  margin: 0;
  display: inline-block;
  width: 7rem;
  vertical-align: middle;
  padding: .4rem;
}

.player-score {
  float: right;
}

.player-status {
  /*noinspection CssInvalidPropertyValue*/
  inline-size: -webkit-fill-available;
  vertical-align: middle;
}

.player-message {
  font-size: .8rem;
  font-stretch: condensed;
  font-weight: lighter;
  color: #888888;
  vertical-align: top;
}

.player-character {
  position: absolute;
  transform: scale(calc(1 + (.3 * var(--is-active-player))));
  z-index: calc(30 + var(--is-active-player));
  left: calc((var(--player-character-x) + var(--player-character-offset)) * var(--tileWidth) + var(--gameboard-buffer-x));
  top: calc((var(--player-character-y) + var(--player-character-offset)) * var(--tileHeight) + var(--gameboard-buffer-y));
  max-height: calc(var(--player-character-scale) * var(--tileHeight));
  max-width: calc(var(--player-character-scale) * var(--tileWidth));
  transition: left 1s, top 1s, transform 2s, translate 1s;
  filter: var(--gamepieceFilter)
  drop-shadow(calc(2px * var(--is-active-player)) calc(4px * var(--is-active-player)) calc(6px * var(--is-active-player)) black);
}


